version: '3.7'

networks:
  node-network:
    driver: bridge

volumes:
  users:
  products:
  tests:
  accounts:
  # exclude:

services:
  mongodb-users:
    image: mongo
    networks:
      - node-network
    volumes:
      - users:/data/db
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 64M

  mongodb-products:
      image: mongo
      networks:
        - node-network
      volumes:
        - products:/data/db
      deploy:
        resources:
          limits:
            cpus: '0.10'
            memory: 64M
      depends_on:
        mongodb-users:
          condition: service_completed_successfully

  mongodb-tests:
    image: mongo
    networks:
      - node-network
    volumes:
      - tests:/data/db
    deploy:
      resources:
        limits:
          cpus: '0.10'
          memory: 64M
    depends_on:
      mongodb-products:
        condition: service_completed_successfully

  mongodb-accounts:
    image: mongo
    networks:
      - node-network
    volumes:
      - accounts:/data/db
    deploy:
        resources:
          limits:
            cpus: '0.10'
            memory: 64M
    depends_on:
      mongodb-tests:
        condition: service_completed_successfully

  auth:
    build: 
      context: ./auth
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb-users:27017/users
      - JWT_KEY=1234567890
    depends_on:
      mongodb-accounts:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - users:/data/db
      # - ./auth/:/app/dev
      # - exclude:/app/dev/node_modules/
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.10'
            memory: 128M

  users:
    build: 
      context: ./users
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb-users:27017/users
      - JWT_KEY=1234567890
    depends_on:
      auth:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - users:/data/db
      # - ./users/:/app/dev
      # - exclude:/app/dev/node_modules/
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.10'
            memory: 128M

  # client:
  #   build: 
  #     context: ./client
  #   ports:
  #     - '5173:5173'
  #   networks:
  #     - node-network
  #   restart: always

  products:
    build: 
      context: ./products
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb-products:27017/products
      - JWT_KEY=1234567890
    depends_on:
      users:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - products:/data/db
      # - ./products/:/app/dev
      # - exclude:/app/dev/node_modules/
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.10'
            memory: 128M


  tests:
    build: 
      context: ./tests
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb-tests:27017/tests
      - JWT_KEY=1234567890docker 
    depends_on:
      products:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - tests:/data/db
      # - ./tests/:/app/dev
      # - exclude:/app/dev/node_modules/
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.25'
            memory: 128M

  accounts:
    build: 
      context: ./accounts
      dockerfile: Dockerfile
    environment:
      - MONGO_URI=mongodb://mongodb-accounts:27017/accounts
      - JWT_KEY=1234567890
    depends_on:
      tests:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - accounts:/data/db
      # - ./accounts/:/app/dev
      # - exclude:/app/dev/node_modules/
    restart: always
    deploy:
        resources:
          limits:
            cpus: '0.25'
            memory: 128M

  nginx:
    build: ./nginx
    ports:
    - '80:80'
    - '443:443'
    depends_on:
      accounts:
        condition: service_completed_successfully
    networks:
      - node-network
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl/nexuseol.crt:/etc/ssl/certs/nexuseol.crt
      - ./nginx/ssl/nexuseol.key:/etc/ssl/private/nexuseol.key
      - ./nginx/dist/:/etc/dist/
    deploy:
        resources:
          limits:
            cpus: '0.25'
            memory: 256M